//注意主串回溯 模式串的长度 会超时！！！
#include <cstdio>
#include <cstring>
char big[1000005], small[10005];
int next[10005];

void getNext(int m)
{
	int i = 0, j = -1;
	next[0] = -1;
	while(i<m)
	{
		if(j==-1 || small[i]==small[j])
		{
			++i;
			++j;
//			next[i] = j;//KMP
			if(small[i]!=small[j]) next[i] = j;//改进KMP 
			else next[i] = next[j];
		}
		else j = next[j];//j需要回溯 
	}
}

int KMP(int n, int m)
{
	int i = 0, j = 0;
	int cnt = 0;
//	while(i<n)
//	{
//		k = i;
//		j = 0;
		while(i<=n && j<=m)
		{
			if(j==-1 || big[i]==small[j])
			{
				++i;
				++j;
			}
			else	j = next[j];
			if(j==m)
			{
				++cnt;
//				i = i-m+1;//i回溯整个模式串的长度会超时 
				j = next[j]; 
			}
		}
		
//	}
	return cnt;
}

int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%s", small);
		scanf("%s", big);
		int len_big = strlen(big);
		int len_small = strlen(small);
		getNext(len_small);
		printf("%d\n",KMP(len_big, len_small));
	}
    return 0;
}
